var tipuesearch = {"pages": [{'title': 'About', 'text': 'cmsite: wcms use  https://github.com/mdecycu/cmsimde  as submodule \n', 'tags': '', 'url': 'About.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation \n Variables \n Comments \n Numbers \n Strings \n print \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n \n \n', 'tags': '', 'url': 'Brython.html'}, {'title': 'w1', 'text': '中秋節放假 \n', 'tags': '', 'url': 'w1.html'}, {'title': 'w2', 'text': '9/16 \n 1.當天在建立github\xa0 建立倉儲(有些人還沒有) \n 2.並且介紹onshape ， Onshape是一種計算機輔助設計軟件系統，通過軟件即服務模型通過Internet提供。它廣泛使用了雲計算，在基於Internet的服務器上執行計算密集型處理和呈現，用戶可以通過Web瀏覽器或iOS和Android應用程序與系統進行交互 \n 3.介紹replit \n \xa0 \n \n', 'tags': '', 'url': 'w2.html'}, {'title': 'w3', 'text': '建立課程帳號以及replit帳號\xa0 \xa0 \xa0 \xa09/23 \n 建立OneDrive帳號與replit帳號 \n OneDrive是上課線上教學的平台 https://www.microsoft.com/zh-tw/microsoft-365/onedrive/online-cloud-storage\xa0 \n \n \n 透過\xa0\xa0 mdecad2022\xa0\xa0 的 organization 建立個人可以管理的倉儲 (site-Github_帳號) \xa0 \n 利用\xa0\xa0 replit 帳號所啟動的動態網站進行內容管理 \xa0 \n 動態轉為靜態網站內容之後,\xa0\xa0 要設法與 Github 倉儲同步. \xa0 \n \n \xa0 \n 之後申請帳號都使用 @nfu\xa0\xa0 電子郵箱   \n \n 用到網址: \n https://mail.nfu.edu.tw \xa0---------學校信箱 \n \n mde.tw 2022 課程公佈欄網站:\xa0 \xa0  https://wcms.repl.co  \n 大二學制以上同學要取得 @nfu.edu.tw 電子郵箱登記的 Onedrive 帳號管理步驟: \n \n 由於學校已經統一幫全校師生以 @nfu.edu.tw 電子郵箱登記 Microsoft 教育帳號, 因此大二以上同學 無需新建帳號, 而是取得該帳號的管理權 . \n 先從 \xa0 https://mail.nfu.edu.tw , 以學號與密碼登入 @nfu.edu.tw mail 2000 電子郵箱. \n 直接在 \xa0 Onedrive 登入 畫面, 以"學號@nfu.edu.tw"輸入作為登入帳號, 點選下一步後, 若出現"忘記密碼"選項, 表示帳號已經建立, 此時點選"忘記密碼", 系統就會寄出修改密碼的連結至"學號@nfu.edu.tw"電子郵箱. \n 從上列已經登入的電子郵箱, 修改登入 Onedrive 系統的帳號對應密碼. \n 之後利用"學號@nfu.edu.tw" 登入 \xa0 Onedrive , 以下列 Teams codes, 就可以分別進入課程教室. \n \n', 'tags': '', 'url': 'w3.html'}, {'title': 'w4', 'text': '打開可攜程式\xa0 \xa0 \xa0 \xa0\xa09/30 \n 在 Replit 執行動態網站: \xa0 \n 必須進入 Shell, 在倉儲根目錄執行下列兩則指令 (取下子模組內容, 並安裝執行所需模組). \xa0 \n git submodule update --init --recursive \xa0 \n pip install\xa0\xa0 flask flask_cors bs4 lxml pelican markdown gevent \xa0 \n \xa0 \n 電腦輔助繪圖工具:\xa0 \xa0 \n \xa0\xa0\xa0 近端 NX2027 與 Solvespace \xa0 \n \xa0\xa0\xa0 雲端: \xa0 https://onshape.com \xa0 \xa0 \n \xa0 \n', 'tags': '', 'url': 'w4.html'}, {'title': 'w5', 'text': '2a 在一台遠端 server, 執行個人倉儲的動態網頁. \xa0 \xa0 \xa0 \xa0 10/7 \n \xa0 \n \n Login to \xa0 https://mail.nfu.edu.tw \xa0 -\xa0 查看登入 stud.cycu.org 伺服器的帳號密碼, 帳號為 cad+學號, 密碼為四個字元, 包括數字與小寫英文字母 \xa0 \n 請到 excel 檔案 \xa0 查詢 \xa0 stud.cycu.org 中與帳號對應的近端 (給 127.0.0.1 使用, 9 開頭的 port) 與遠端 (給 stud.cycu.org, 8 開頭的 port) 埠號 \xa0 \n 修改可攜 Python 3.10.6 start.bat, 蓋掉第三行後重新啟動, 目的希望將操作系統的命令搜尋路徑放在可攜目錄搜尋路徑之後. \xa0 \n 重新啟動可攜程式環境, 在其中一個命令列, ssh\xa0 \xa0 cad+學號@stud.cycu.org , 表示要使用 secure shell 遠端登入到 stud.cycu.org, 這是一台 Linux 主機, 安裝 Ubuntu 22.04 Server.(若使用的網路連線協定並無 IPv6,\xa0 可將系統的 proxy 設為 140.130.17.4:3128 kmolab/kmolab) \xa0 \n 在 ssh 登入畫面, 以 ssh-keygen 建立 key pairs, .ssh/id_rsa 為 private key, id_rsa.pub 為 public key \xa0 \n 設法利用 Filezilla, 以 sftp 安全的(Secure)檔案(File)傳輸(Transmission)協定(Protocol), 與 stud.cycu.org 伺服器連結. \xa0 \n 利用\xa0 Filezilla sftp 取下 id_rsa.pub, 登錄至 Github 帳號下的 Setting - >\xa0 SSH and GPG keys. \xa0 \n 對\xa0 server sftp 也可以利用\xa0 \xa0 Filezilla portable , 以圖形介面完成. 而 ssh 也可以透過\xa0 putty.exe 執行遠端登入. \xa0 \n 接下來要下載\xa0 \xa0 config \xa0 設定檔案,\xa0 以 sftp 放入 stud.cycu.org 主機的 .ssh 目錄中. \xa0 \n 接下來要在\xa0 Ubuntu (也就是 stud.cycu.org 這台主機所安裝的操作系統) 中, 設定 .gitconfig, 總共包含三項設定: git config --global user.name "scrum-1", git config --global user.email\xa0 "scrum1@mde.tw"\xa0\xa0 以及 git config --global http.proxy http://p42.cycu.org:3128, 這三個設定必須在 ssh 登入畫面中執行, 設定完成檔案會存入帳號根目錄中的 .gitconfig \xa0 \n 利用\xa0 git clone --recurse-submodules\xa0 \xa0 git@demo:mdecad2022/site-scrum-1.git \xa0 demo \xa0 \n 接著下載 \xa0 server.py , 在 Windows 編輯 \xa0 server.py , 將個人分配到的 9xxxx 埠號填入後存檔, 以 sftp 放入上列取下的倉儲根目錄. \xa0 \n 登入\xa0 Ubuntu 後, 會使用的指令: pwd 代表 print working directory, clear -\xa0 清除螢幕, cd - 更換目錄, ls -l 列出目錄詳細內容, chmod u+x \xa0 acp \xa0 表示讓 user 可以 execute acp script (能夠讓使用者以 source acp 加上提交字串進行 git add, git commit, git push, 如何在 Windows 執行 acp.bat 加上提交字串. \xa0 \n \n \xa0 \n', 'tags': '', 'url': 'w5.html'}, {'title': 'w6', 'text': 'NX2027 與 Onshape 零組件繪圖練習\xa0 \xa0 \xa010/14 \n 指令: \n git config --global http.proxy\xa0 http://p42.cycu.org:3128 \xa0 \n \xa0 \xa0 \n git config --global user.name "name" \xa0 \n \xa0 \xa0 \n git config --global user.email "email" \xa0 \n \xa0 \xa0 \n git clone --recurse-submodules git@demo:mdecad2022/site-github_41023122(帳號).git s \xa0 \n \xa0 \xa0 \n git submodule update --init --recursive \xa0 \n \xa0 \xa0 \n python3 server.py \xa0 \n \xa0 \xa0 \n https://stud.cycu.org:8148(每個人不同) \n \xa0 \xa0 \n acp 放入倉儲後 \xa0 \n \xa0 \xa0 \n chmod u+x acp\xa0 \xa0 \n \xa0 \xa0 \n source acp "提交說明字串" \xa0 \n \xa0 \xa0 \n python3 server.py & \xa0 \n \xa0 \xa0 \n ps aux | grep "server.py" \xa0 \n \xa0 \xa0 \n kill -9 111919 \xa0 \n \xa0 \xa0 \n cd s, cd cmsimde, git pull origin master \xa0 \n \xa0 \xa0 \n cd .., python3 server.py \xa0 \n \xa0 \xa0 \n exit 推出 login \xa0 \n \xa0 \n To fix the cmsimde bug on edit during https mode: \xa0 \n Need to cd cmsimde and do "git pull origin master" to update the cmsimde submodule files. \xa0 \n \xa0 \n After that, go back to the repository root directory to execute python3 server.py & to start the dynamic site. \xa0 \n \xa0 \xa0 \n \xa0 \n', 'tags': '', 'url': 'w6.html'}, {'title': 'w7', 'text': '網路設定與可攜程式系統_雙網路協定 \xa0 \xa0 \xa0 \xa010/21 \n 輸入指令: \n 1. \xa0ssh cad41023122@stud.cycu.org  2. \xa0yes \n 3. \xa0密碼 \n 4. \xa0cd site-41023122 5. \xa0ython3 server.py \n', 'tags': '', 'url': 'w7.html'}, {'title': 'w8-9', 'text': '\n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n 考試 \xa0 https://exam.cycu.org/public/code/index.php\xa0 \n \n \n \n \n \n test \n from \n to \n status \n action \n \n \n w8_cad2a \n 2022-10-28 13:40:00 \n 2022-10-28 14:00:00 \n 48.000 / 100.000 (48%) \n \n \n \n w4_cad2a \n 2022-09-30 14:08:28 \n 2022-10-01 14:08:28 \n 129.334 / 200.000 (65%) \n \n \n \n \n \n \n 心得:不是很熟，但有同學協助才讓我用完，這些也讓我有一些基礎了解 \n  editor2 結束 ', 'tags': '', 'url': 'w8-9.html'}]};